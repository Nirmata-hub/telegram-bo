import logging
import random
import datetime
import asyncio
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# üîë –î–∞–Ω–Ω—ã–µ
TOKEN = "8134220896:AAE6WjqS_JBw3Xo_tL05hd_LIS2IBkDIwqE"   # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
CHAT_ID = 123456789    # —Ç–≤–æ–π chat_id

logging.basicConfig(level=logging.INFO)

# --- –°–æ–æ–±—â–µ–Ω–∏—è ---
love_compliments = [
    "–¢—ã —Å–∞–º–∞—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –Ω–∞ —Å–≤–µ—Ç–µ ‚ù§Ô∏è",
    "–ú–æ—è –ª—é–±–æ–≤—å –∫ —Ç–µ–±–µ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–∞ üíï",
    "–¢—ã ‚Äî –º–æ—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è üåå",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å üòò",
    "–¢—ã ‚Äî —á—É–¥–æ –∏–∑ —á—É–¥–µ—Å ‚ú®",
    "–¢—ã –º–æ—è –º–µ—á—Ç–∞ –∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ üíñ"
]

tender_compliments = [
    "–¢—ã –º–æ—ë –Ω–µ–∂–Ω–æ–µ —á—É–¥–æ üå∏",
    "–û–±–Ω—è—Ç—å —Ç–µ–±—è ‚Äî –º–æ—ë —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∂–µ–ª–∞–Ω–∏–µ ü§ó",
    "–¢—ã –º—è–≥—á–µ –æ–±–ª–∞—á–∫–∞ –∏ —Ç–µ–ø–ª–µ–µ —Å–æ–ª–Ω—Ü–∞ ‚òÄÔ∏è",
    "–¢–≤–æ–∏ –≥–ª–∞–∑–∞ ‚Äî –∫–∞–∫ –¥–≤–∞ –æ–∫–µ–∞–Ω–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —è —Ç–æ–Ω—É üíï",
    "–¢—ã –Ω–µ–∂–Ω–æ—Å—Ç—å, –≤–æ–ø–ª–æ—â—ë–Ω–Ω–∞—è –≤ —á–µ–ª–æ–≤–µ–∫–µ ‚ú®",
    "–° —Ç–æ–±–æ–π –º–∏—Ä —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ–±—Ä–µ–µ –∏ —Å–≤–µ—Ç–ª–µ–µ üíñ",
    "–¢—ã –º–æ—è —Å–∞–º–∞—è —Å–ª–∞–¥–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å üçØ",
    "–ú–æ—è –¥–µ–≤–æ—á–∫–∞ ‚Äî —Å–∞–º–∞—è –Ω–µ–∂–Ω–∞—è –Ω–∞ —Å–≤–µ—Ç–µ üåπ"
]

morning_messages = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ª—é–±–æ–≤—å –º–æ—è ‚òÄÔ∏è",
    "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è, –°–æ–ª–Ω—ã—à–∫–æ üå∏",
    "–ü—É—Å—Ç—å —Ç–≤–æ–π –¥–µ–Ω—å –±—É–¥–µ—Ç –ª—ë–≥–∫–∏–º –∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã–º üíï",
    "–° –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º, –º–æ—è —Å–∞–º–∞—è –õ—é–±–∏–º–∞—è üòò"
]

night_messages = [
    "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –º–æ—è –ª—é–±–æ–≤—å üåô",
    "–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤, –º–æ—è —Ä–∞–¥–æ—Å—Ç—å üíñ",
    "–ü—É—Å—Ç—å —Ç–µ–±–µ –ø—Ä–∏—Å–Ω—é—Å—å —è üòò",
    "–ù–µ–∂–Ω—ã—Ö —Å–Ω–æ–≤, –º–æ—è –î–µ–≤–æ—á–∫–∞ ‚ú®"
]

love_messages = [
    "–õ—é–±–ª—é —Ç–µ–±—è –≤—Å–µ–º —Å–µ—Ä–¥—Ü–µ–º –º–∞–ª—ã—à ‚ù§Ô∏è",
    "–¢—ã –º–æ—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è üíï",
    "–¢—ã –º–æ—ë —Å—á–∞—Å—Ç—å–µ üå∏",
    "–° —Ç–æ–±–æ–π –º–æ—è –∂–∏–∑–Ω—å –∏–º–µ–µ—Ç —Å–º—ã—Å–ª üòò"
]

miss_messages = [
    "–Ø —Ç–∞–∫ —Å–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ, –ª—é–±–æ–≤—å –º–æ—è üíï",
    "–ö–∞–∂–¥–∞—è –º–∏–Ω—É—Ç–∞ –±–µ–∑ —Ç–µ–±—è –∫–∞–∂–µ—Ç—Å—è –≤–µ—á–Ω–æ—Å—Ç—å—é ‚è≥‚ù§Ô∏è",
    "–•–æ—á—É —Å–∫–æ—Ä–µ–µ –∫ —Ç–µ–±–µ ü§ó",
    "–°–∫—É—á–∞—é —Ç–∞–∫ —Å–∏–ª—å–Ω–æ, —á—Ç–æ —Å–µ—Ä–¥—Ü–µ —Ç–æ—Å–∫—É–µ—Ç üíñ",
    "–¢—ã –≤ –º–æ–∏—Ö –º—ã—Å–ª—è—Ö –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É üòò",
    "–°–∫—É—á–∞—é –∏ –∂–¥—É –Ω–∞—à–µ–π –≤—Å—Ç—Ä–µ—á–∏ ‚ú®",
    "–ë–µ–∑ —Ç–µ–±—è –≤—Å—ë —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—É—Å—Ç—ã–º‚Ä¶ üòî",
    "–ú–æ—ë —Å—á–∞—Å—Ç—å–µ ‚Äî –±—ã—Ç—å —Ä—è–¥–æ–º, –∞ –ø–æ–∫–∞ –æ—á–µ–Ω—å —Å–∫—É—á–∞—é üåπ"
]

surprise_messages = [
    "–î—É–º–∞—é –æ —Ç–µ–±–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üí≠‚ù§Ô∏è",
    "–¢—ã –º–æ—ë —Å—á–∞—Å—Ç—å–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ ‚ú®",
    "–ú–æ—è –ª—é–±–∏–º–∞—è, —Ç—ã —É –º–µ–Ω—è —Å–∞–º–∞—è –ª—É—á—à–∞—è üåπ",
    "–•–æ—á—É –æ–±–Ω—è—Ç—å —Ç–µ–±—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ü§ó",
    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤ –º–æ—ë–º —Å–µ—Ä–¥—Ü–µ üíñ",
    "–Ø —É–ª—ã–±–∞—é—Å—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥—É–º–∞—é –æ —Ç–µ–±–µ üòò",
    "–õ—é–±–ª—é —Ç–µ–±—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ üî•"
]

kiss_messages = [
    "–¶–µ–ª—É—é —Ç–µ–±—è –Ω–µ–∂–Ω–æ üòò",
    "–û–¥–∏–Ω –ø–æ—Ü–µ–ª—É–π –¥–ª—è –º–æ–µ–π –ª—é–±–∏–º–æ–π üíã",
    "–¢—ã –º–æ—è —Å–ª–∞–¥–∫–∞—è –∫–æ–Ω—Ñ–µ—Ç–∫–∞ üç≠üíñ",
    "–ü–æ—Å—ã–ª–∞—é –º–∏–ª–ª–∏–æ–Ω –ø–æ—Ü–µ–ª—É–µ–≤ üíå",
    "–õ–æ–≤–∏ –ø–æ—Ü–µ–ª—É–π—á–∏–∫ –æ—Ç –º–µ–Ω—è üòò"
]

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ ---
def choose_random(messages):
    return random.choice(messages)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç–µ–±–µ üíñ"), KeyboardButton("–ù–µ–∂–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã üå∏")],
        [KeyboardButton("–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ ‚òÄÔ∏è"), KeyboardButton("–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô")],
        [KeyboardButton("–°–∫—É—á–∞—é –æ—á–µ–Ω—å üòò"), KeyboardButton("–°—é—Ä–ø—Ä–∏–∑ üéÅ")],
        [KeyboardButton("–õ—é–±–ª—é —Ç–µ–±—è ‚ù§Ô∏è"), KeyboardButton("–ü–æ—Ü–µ–ª—É–π—á–∏–∫–∏ üíã")],
        [KeyboardButton("–ú–µ–≥–∞-—Å—é—Ä–ø—Ä–∏–∑ üéâ")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –º–æ—è –ª—é–±–æ–≤—å ‚ù§Ô∏è", reply_markup=reply_markup)

async def compliment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(love_compliments))

async def tender(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(tender_compliments))

async def morning(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(morning_messages))

async def night(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(night_messages))

async def miss(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(miss_messages))

async def surprise(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(surprise_messages))

async def love(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(love_messages))

async def kiss(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(choose_random(kiss_messages))

async def mega_surprise(update: Update, context: ContextTypes.DEFAULT_TYPE):
    all_messages = (love_compliments + tender_compliments + morning_messages +
                    night_messages + love_messages + miss_messages +
                    surprise_messages + kiss_messages)
    await update.message.reply_text(choose_random(all_messages))

# --- –ê–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è ---
def setup_scheduler(app: Application):
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")

    scheduler.add_job(lambda: asyncio.create_task(app.bot.send_message(CHAT_ID, random.choice(morning_messages))),
                      "cron", hour=9, minute=0)
    scheduler.add_job(lambda: asyncio.create_task(app.bot.send_message(CHAT_ID, random.choice(love_compliments))),
                      "cron", hour=15, minute=0)
    scheduler.add_job(lambda: asyncio.create_task(app.bot.send_message(CHAT_ID, random.choice(love_messages))),
                      "cron", hour=19, minute=0)
    scheduler.add_job(lambda: asyncio.create_task(app.bot.send_message(CHAT_ID, random.choice(night_messages))),
                      "cron", hour=23, minute=0)

    scheduler.start()

# --- –°–ª—É—á–∞–π–Ω—ã–µ —Å—é—Ä–ø—Ä–∏–∑—ã ---
async def send_random_surprise(app: Application):
    while True:
        wait_hours = random.randint(1, 3)
        await asyncio.sleep(wait_hours * 3600)

        now = datetime.datetime.now().hour
        if 10 <= now <= 22:
            await app.bot.send_message(CHAT_ID, random.choice(surprise_messages))

async def on_startup(app: Application):
    setup_scheduler(app)
    asyncio.create_task(send_random_surprise(app))

# --- –ó–∞–ø—É—Å–∫ ---
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Regex("^–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç–µ–±–µ üíñ$"), compliment))
    app.add_handler(MessageHandler(filters.Regex("^–ù–µ–∂–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã üå∏$"), tender))
    app.add_handler(MessageHandler(filters.Regex("^–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ ‚òÄÔ∏è$"), morning))
    app.add_handler(MessageHandler(filters.Regex("^–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô$"), night))
    app.add_handler(MessageHandler(filters.Regex("^–°–∫—É—á–∞—é –æ—á–µ–Ω—å üòò$"), miss))
    app.add_handler(MessageHandler(filters.Regex("^–°—é—Ä–ø—Ä–∏–∑ üéÅ$"), surprise))
    app.add_handler(MessageHandler(filters.Regex("^–õ—é–±–ª—é —Ç–µ–±—è ‚ù§Ô∏è$"), love))
    app.add_handler(MessageHandler(filters.Regex("^–ü–æ—Ü–µ–ª—É–π—á–∏–∫–∏ üíã$"), kiss))
    app.add_handler(MessageHandler(filters.Regex("^–ú–µ–≥–∞-—Å—é—Ä–ø—Ä–∏–∑ üéâ$"), mega_surprise))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    app.post_init = on_startup
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()